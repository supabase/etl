name: Docker Build

on:
  workflow_call:
    inputs:
      image:
        description: "Docker image (e.g. docker.io/<org>/<repo>)"
        type: string
        required: true
      file:
        description: "Path to Dockerfile relative to the repository root"
        type: string
        default: "Dockerfile"
      context:
        description: "Docker build context"
        type: string
        default: "."
      push:
        description: "Push image to registry"
        type: boolean
        default: false
      tag_with_version:
        description: "Also tag the image with version"
        type: boolean
        default: false
      version:
        description: "Version to tag when tag_with_version=true"
        type: string
        required: false

permissions:
  contents: read

jobs:
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: inputs.push == true
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image }}
          tags: |
            type=raw,value=latest
            type=sha,format=short,prefix=
            ${{ inputs.tag_with_version && format('type=raw,value=v{0}', inputs.version) || '' }}

      - name: Build and Push Image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output Image Information
        run: |
          IMAGE="${{ inputs.image }}"
          NAME="${IMAGE##*/}"
          SHORT_SHA="${GITHUB_SHA::7}"
          TAGS="latest, ${SHORT_SHA}"
          if [ "${{ inputs.tag_with_version }}" = "true" ] && [ -n "${{ inputs.version }}" ]; then
            TAGS="${TAGS}, v${{ inputs.version }}"
          fi
          HUB_PATH=$(echo "${IMAGE}" | sed -E 's@^docker\.io/@@')
          echo "‚úÖ Successfully built and pushed ${NAME} image"
          echo "üè∑Ô∏è Tags: ${TAGS}"
          echo "üîó View at: https://hub.docker.com/r/${HUB_PATH}"
