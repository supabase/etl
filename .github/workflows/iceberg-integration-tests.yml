name: Iceberg Tests

on:
  push:
    branches: [main, develop, 'or/iceberg']
    paths:
      - 'etl-destinations/src/iceberg/**'
      - 'etl-destinations/tests/integration/iceberg_*.rs'
      - 'etl-destinations/docker-compose.test.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'etl-destinations/src/iceberg/**'
      - 'etl-destinations/tests/integration/iceberg_*.rs'

env:
  CARGO_TERM_COLOR: always

jobs:
  test-unit:
    name: Iceberg Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run unit tests
        run: cargo test --features iceberg --lib iceberg

      - name: Run formatting check
        run: cargo fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --features iceberg --all-targets -- -D warnings

  test-integration:
    name: Iceberg Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Start Docker infrastructure
        working-directory: etl-destinations
        run: |
          docker-compose -f docker-compose.test.yml up -d
          sleep 30  # Wait for services to start

      - name: Wait for services
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:8181/v1/config 2>/dev/null; do sleep 2; done' || echo "Iceberg REST not ready"
          timeout 30 bash -c 'until curl -f http://localhost:9000/minio/health/live 2>/dev/null; do sleep 2; done' || echo "MinIO not ready"

      - name: Run integration tests
        working-directory: etl-destinations
        run: cargo test --features iceberg iceberg_integration --nocapture

      - name: Stop infrastructure
        if: always()
        working-directory: etl-destinations
        run: docker-compose -f docker-compose.test.yml down